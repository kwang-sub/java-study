package study.java.collection.list;

public class A_List {
    /*
    * -List
    * 객체를 일렬로 늘어놓은 구조
    * 인덱스 기반으로 관리되기 때문에 객체를 할당할시 자동으로 인덱스 부여
    * List 인터페이스를 상속한 클래스로는 ArrayList, Vector, LinkedList 등이 있다.
    *
    * -ArrayList
    * 배열과 비슷한 특성을 가지지만 큰 차이점은 객체의 추가,삭제에 따라 용량(사이즈)가 증가,감소한다
    * 그 후 기존 인덱스들은 당겨지거나 미뤄진다.
    * 따라서 빈번한 삽입,삭제가 이루어지면 ArrayList는 효율적이지 못하고 인덱스로 검색하기 때문에 검색에 효율적이다.
    *
    * -Vector
    * ArrayList와 비슷한 구조이고 차이점은 동기화된 메소드로 구성되어 있다. 따라서 하나의 스레드만 이용할 수 있기 때문에 스레드가 안전하다
    *
    * -LinkedList
    * LinkedList는 사용법은 똑같지만 구조는 인접참조로 아예 다르다. 인접참조이므로 추가,삭제가 이루어져도 인덱스를 사용하지 않기 떄문에 전체적인
    * 수정이 이루어지지 않아서 빈번한 추가, 삭제가 이루어지는 경우 효율 적이다.
    *
    * */
}
